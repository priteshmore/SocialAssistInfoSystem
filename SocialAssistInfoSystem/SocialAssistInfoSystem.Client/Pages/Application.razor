@page "/application"
@using FluentValidation
@using SocialAssistInfoSystem.Client.Data
@using SocialAssistInfoSystem.Client.Data.Enum
@using System.ComponentModel.DataAnnotations
@using SocialAssistInfoSystem.Client.Util
<h3>Application</h3>

<MudCard>
    <MudForm Model="@m_objApplicationModel"
             @ref="@m_objMudForm"
             Validation="@(m_objOrderValidator.ValidateValue)"
             ValidationDelay="0">
        <MudCardContent>

            <MudPaper Class="d-flex flex-wrap gap-4" MaxWidth="auto" Elevation="0">

                <MudTextField @bind-Value="m_objApplicationModel.FirstName"
                              For="@(() => m_objApplicationModel.FirstName)"
                              Immediate="true"
                              Label="First Name" />

                <MudTextField @bind-Value="m_objApplicationModel.MiddleName"
                              For="@(() => m_objApplicationModel.MiddleName)"
                              Immediate="true"
                              Label="Middle Name" />

                <MudTextField @bind-Value="m_objApplicationModel.LastName"
                              For="@(() => m_objApplicationModel.LastName)"
                              Immediate="true"
                              Label="Last Name" />
            </MudPaper>

            <MudDatePicker Label="Date of Birth" @bind-Date="m_objApplicationModel.DOB" />

            <MudSelect @bind-Value="m_objApplicationModel.Gender" Label="Select Gender" OpenIcon="@Icons.Material.Filled.Person" AdornmentColor="Color.Secondary">
                @foreach (Gender item in Enum.GetValues(typeof(Gender)))
                {
                    <MudSelectItem Value="@item">@item.GetDisplayName()</MudSelectItem>
                }
            </MudSelect>

            <MudSelect @bind-Value="m_objApplicationModel.MaritalStatus" Label="Select Marital Status" OpenIcon="@Icons.Material.Filled.Person2" AdornmentColor="Color.Secondary">
                @foreach (MaritalStatus item in Enum.GetValues(typeof(MaritalStatus)))
                {
                    <MudSelectItem Value="@item">@item.GetDisplayName()</MudSelectItem>
                }
            </MudSelect>

            <MudTextField @bind-Value="m_objApplicationModel.PassportNo"
                          For="@(() => m_objApplicationModel.PassportNo)"
                          Immediate="true"
                          Label="Passport No" />

            <MudPaper Class="d-flex flex-wrap gap-4" MaxWidth="auto" Elevation="0">
                <MudSelect @bind-Value="Country" Label="Country" Variant="Variant.Text">
                    @foreach (string item in CountryItems)
                    {
                        <MudSelectItem Value="@item">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Flag_of_Austria.svg" height="14" class="mr-1" /> @item
                        </MudSelectItem>
                    }   
                </MudSelect>

                <MudSelect @bind-Value="Subcountry" Label="Subcountry" Variant="Variant.Text" Disabled="string.IsNullOrEmpty(Country)">
                    @foreach (string item in SubcountryItems)
                    {
                        <MudSelectItem Value="@item">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Flag_of_Austria.svg" height="14" class="mr-1" /> @item
                        </MudSelectItem>
                    } 
                </MudSelect>

                <MudSelect @bind-Value="Location" Label="Location" Variant="Variant.Text" Disabled="string.IsNullOrEmpty(Subcountry)">
                    @foreach (string item in LocationItems)
                    {
                        <MudSelectItem Value="@item">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Flag_of_Austria.svg" height="14" class="mr-1" /> @item
                        </MudSelectItem>
                    }
                </MudSelect>

                <MudSelect @bind-Value="SubLocation" Label="Sub Location" Variant="Variant.Text" Disabled="string.IsNullOrEmpty(Location)">
                    @foreach (string item in SubLocationItems)
                    {
                        <MudSelectItem Value="@item">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Flag_of_Austria.svg" height="14" class="mr-1" /> @item
                        </MudSelectItem>
                    }
                </MudSelect>


                <MudSelect @bind-Value="Village" Label="Village" Variant="Variant.Text" Disabled="string.IsNullOrEmpty(SubLocation)">
                    @foreach (string item in VillageItems)
                    {
                        <MudSelectItem Value="@item">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Flag_of_Austria.svg" height="14" class="mr-1" /> @item
                        </MudSelectItem>
                    }
                </MudSelect>
            </MudPaper>

            <MudTextField @bind-Value="m_objApplicationModel.PhoneNumber"
                          Label="Phone Number"
                          InputType="InputType.Telephone"
                          Placeholder="Enter phone number"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Phone"
                          Immediate="true"
                          MaxLength="10"
                          For="@(() => m_objApplicationModel.PhoneNumber)" />


            <MudSelect @bind-Value="m_objApplicationModel.Scheme" Label="Select Scheme" OpenIcon="@Icons.Material.Filled.Person2" AdornmentColor="Color.Secondary">
                @foreach (SchemeOption item in Enum.GetValues(typeof(SchemeOption)))
                {
                    <MudSelectItem Value="@item">@item.GetDisplayName()</MudSelectItem>
                }
            </MudSelect>

            <MudTextField @bind-Value="m_objApplicationModel.AnyOtherScheme"
                          For="@(() => m_objApplicationModel.AnyOtherScheme)"
                          Immediate="true"
                          Disabled="@(m_objApplicationModel.Scheme!=SchemeOption.ANY_OTHER)"
                          Label="Any Other Scheme" />
        </MudCardContent>
    </MudForm>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await Submit())">Submit</MudButton>
    </MudCardActions>
</MudCard>